ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"button.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.button,"ax",%progbits
  20              		.align	1
  21              		.global	button
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	button:
  27              	.LFB130:
  28              		.file 1 "Core/Src/button.c"
   1:Core/Src/button.c **** /* Includes ------------------------------------------------------------------*/
   2:Core/Src/button.c **** #include "button.h"
   3:Core/Src/button.c **** 
   4:Core/Src/button.c **** /**
   5:Core/Src/button.c ****  * @brief Button debounce.
   6:Core/Src/button.c ****  *
   7:Core/Src/button.c ****  * Function eliminates the influence of contact flickering upon pressing a button (debouncing). 
   8:Core/Src/button.c ****  * Usage:
   9:Core/Src/button.c ****  * @code
  10:Core/Src/button.c ****  * uint8_t oldstate;  // Old state flag
  11:Core/Src/button.c ****  * void main() {
  12:Core/Src/button.c ****  *	  
  13:Core/Src/button.c ****  *
  14:Core/Src/button.c ****  *  do {
  15:Core/Src/button.c ****  *    if(Button(GPIOB, GPIO_PIN_3, 1, 0)) { // Detect logical one
  16:Core/Src/button.c ****  *      oldstate = 1;                              // Update flag
  17:Core/Src/button.c ****  *    }
  18:Core/Src/button.c ****  *    if (oldstate && !Button(GPIOB, GPIO_PIN_4, 0)) {   // Detect one-to-zero transition
  19:Core/Src/button.c ****  *      //"PB4 was pressed";
  20:Core/Src/button.c ****  *      oldstate = 0;                              // Update flag
  21:Core/Src/button.c ****  *    }
  22:Core/Src/button.c ****  *  } while(1);                                    // Endless loop
  23:Core/Src/button.c ****  * }
  24:Core/Src/button.c ****  * @endcode
  25:Core/Src/button.c ****  * @param ui32Port GPIO where button is connected, using the macro from ST (GPIOX)
  26:Core/Src/button.c ****  * @param ui32Pin  Pin number on designated port from the gpio.h pin definitions (GPIO\_PIN\_X) 
  27:Core/Src/button.c ****  * @param active_state can be either 0 or 1, and it determines if the button is active upon logical
  28:Core/Src/button.c ****  * @return 255 if the pin was in the active state for given period, 0 otherwise
  29:Core/Src/button.c ****  */
  30:Core/Src/button.c **** uint16_t button(GPIO_TypeDef* ui32Port, uint16_t ui16Pin, uint16_t active_state)
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 2


  31:Core/Src/button.c **** {
  29              		.loc 1 31 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 86B0     		sub	sp, sp, #24
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
  45 0008 0B46     		mov	r3, r1
  46 000a 7B80     		strh	r3, [r7, #2]	@ movhi
  47 000c 1346     		mov	r3, r2	@ movhi
  48 000e 3B80     		strh	r3, [r7]	@ movhi
  32:Core/Src/button.c ****     //lê o botão 'tries' vezes durante 'time' milissegundos
  33:Core/Src/button.c ****     //o botão deve passar pelo menos a metade final do período em active_state
  34:Core/Src/button.c ****     uint32_t i,tries = 5;
  49              		.loc 1 34 16
  50 0010 0523     		movs	r3, #5
  51 0012 FB60     		str	r3, [r7, #12]
  35:Core/Src/button.c ****     uint8_t pressed = 0, unpressed = 0;
  52              		.loc 1 35 13
  53 0014 0023     		movs	r3, #0
  54 0016 FB74     		strb	r3, [r7, #19]
  55              		.loc 1 35 26
  56 0018 0023     		movs	r3, #0
  57 001a BB74     		strb	r3, [r7, #18]
  36:Core/Src/button.c ****     uint16_t ret = 0;
  58              		.loc 1 36 14
  59 001c 0023     		movs	r3, #0
  60 001e 3B82     		strh	r3, [r7, #16]	@ movhi
  37:Core/Src/button.c ****     
  38:Core/Src/button.c ****     
  39:Core/Src/button.c ****     for(i=0;i<tries;i++)
  61              		.loc 1 39 10
  62 0020 0023     		movs	r3, #0
  63 0022 7B61     		str	r3, [r7, #20]
  64              		.loc 1 39 5
  65 0024 18E0     		b	.L2
  66              	.L5:
  40:Core/Src/button.c ****     {
  41:Core/Src/button.c ****         
  42:Core/Src/button.c ****         if(HAL_GPIO_ReadPin(ui32Port,ui16Pin))
  67              		.loc 1 42 12
  68 0026 7B88     		ldrh	r3, [r7, #2]
  69 0028 1946     		mov	r1, r3
  70 002a 7868     		ldr	r0, [r7, #4]
  71 002c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  72 0030 0346     		mov	r3, r0
  73              		.loc 1 42 11
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 3


  74 0032 002B     		cmp	r3, #0
  75 0034 05D0     		beq	.L3
  43:Core/Src/button.c ****         {
  44:Core/Src/button.c ****             pressed++;
  76              		.loc 1 44 20
  77 0036 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
  78 0038 0133     		adds	r3, r3, #1
  79 003a FB74     		strb	r3, [r7, #19]
  45:Core/Src/button.c ****             unpressed=0;
  80              		.loc 1 45 22
  81 003c 0023     		movs	r3, #0
  82 003e BB74     		strb	r3, [r7, #18]
  83 0040 04E0     		b	.L4
  84              	.L3:
  46:Core/Src/button.c ****         }
  47:Core/Src/button.c ****         else
  48:Core/Src/button.c ****         {
  49:Core/Src/button.c ****             unpressed++;
  85              		.loc 1 49 22
  86 0042 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
  87 0044 0133     		adds	r3, r3, #1
  88 0046 BB74     		strb	r3, [r7, #18]
  50:Core/Src/button.c ****             pressed = 0;
  89              		.loc 1 50 21
  90 0048 0023     		movs	r3, #0
  91 004a FB74     		strb	r3, [r7, #19]
  92              	.L4:
  51:Core/Src/button.c ****         }
  52:Core/Src/button.c ****         HAL_Delay(1);
  93              		.loc 1 52 9 discriminator 2
  94 004c 0120     		movs	r0, #1
  95 004e FFF7FEFF 		bl	HAL_Delay
  39:Core/Src/button.c ****     {
  96              		.loc 1 39 22 discriminator 2
  97 0052 7B69     		ldr	r3, [r7, #20]
  98 0054 0133     		adds	r3, r3, #1
  99 0056 7B61     		str	r3, [r7, #20]
 100              	.L2:
  39:Core/Src/button.c ****     {
 101              		.loc 1 39 14 discriminator 1
 102 0058 7A69     		ldr	r2, [r7, #20]
 103 005a FB68     		ldr	r3, [r7, #12]
 104 005c 9A42     		cmp	r2, r3
 105 005e E2D3     		bcc	.L5
  53:Core/Src/button.c ****     }
  54:Core/Src/button.c ****     if(active_state)
 106              		.loc 1 54 7
 107 0060 3B88     		ldrh	r3, [r7]
 108 0062 002B     		cmp	r3, #0
 109 0064 07D0     		beq	.L6
  55:Core/Src/button.c ****     {
  56:Core/Src/button.c ****         if (pressed>(tries/2))
 110              		.loc 1 56 20
 111 0066 FA7C     		ldrb	r2, [r7, #19]	@ zero_extendqisi2
 112              		.loc 1 56 27
 113 0068 FB68     		ldr	r3, [r7, #12]
 114 006a 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 4


 115              		.loc 1 56 12
 116 006c 9A42     		cmp	r2, r3
 117 006e 09D9     		bls	.L7
  57:Core/Src/button.c ****         {
  58:Core/Src/button.c ****             ret = 0xFF;
 118              		.loc 1 58 17
 119 0070 FF23     		movs	r3, #255
 120 0072 3B82     		strh	r3, [r7, #16]	@ movhi
 121 0074 06E0     		b	.L7
 122              	.L6:
  59:Core/Src/button.c ****         }
  60:Core/Src/button.c ****     }
  61:Core/Src/button.c ****     else
  62:Core/Src/button.c ****     {
  63:Core/Src/button.c ****         if (unpressed>(tries/2))
 123              		.loc 1 63 22
 124 0076 BA7C     		ldrb	r2, [r7, #18]	@ zero_extendqisi2
 125              		.loc 1 63 29
 126 0078 FB68     		ldr	r3, [r7, #12]
 127 007a 5B08     		lsrs	r3, r3, #1
 128              		.loc 1 63 12
 129 007c 9A42     		cmp	r2, r3
 130 007e 01D9     		bls	.L7
  64:Core/Src/button.c ****         {
  65:Core/Src/button.c ****             ret = 0xFF;
 131              		.loc 1 65 17
 132 0080 FF23     		movs	r3, #255
 133 0082 3B82     		strh	r3, [r7, #16]	@ movhi
 134              	.L7:
  66:Core/Src/button.c ****         }
  67:Core/Src/button.c ****     }    
  68:Core/Src/button.c ****     return ret;
 135              		.loc 1 68 12
 136 0084 3B8A     		ldrh	r3, [r7, #16]
  69:Core/Src/button.c **** }
 137              		.loc 1 69 1
 138 0086 1846     		mov	r0, r3
 139 0088 1837     		adds	r7, r7, #24
 140              	.LCFI3:
 141              		.cfi_def_cfa_offset 8
 142 008a BD46     		mov	sp, r7
 143              	.LCFI4:
 144              		.cfi_def_cfa_register 13
 145              		@ sp needed
 146 008c 80BD     		pop	{r7, pc}
 147              		.cfi_endproc
 148              	.LFE130:
 150              		.section	.text.button_release,"ax",%progbits
 151              		.align	1
 152              		.global	button_release
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 157              	button_release:
 158              	.LFB131:
  70:Core/Src/button.c **** 
  71:Core/Src/button.c **** /* Includes ------------------------------------------------------------------*/
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 5


  72:Core/Src/button.c **** #include "button.h"
  73:Core/Src/button.c **** 
  74:Core/Src/button.c **** /**
  75:Core/Src/button.c ****  * @brief Button debounce and release detect.
  76:Core/Src/button.c ****  *
  77:Core/Src/button.c ****  * Function eliminates the influence of contact flickering upon pressing a button (debouncing). 
  78:Core/Src/button.c ****  * When a button press is detected, the function only returns when the button is released.
  79:Core/Src/button.c ****  *  
  80:Core/Src/button.c ****  * Usage:
  81:Core/Src/button.c ****  * @code
  82:Core/Src/button.c ****  * uint8_t oldstate;  // Old state flag
  83:Core/Src/button.c ****  * void main() {
  84:Core/Src/button.c ****  *	  
  85:Core/Src/button.c ****  *
  86:Core/Src/button.c ****  *  do {
  87:Core/Src/button.c ****  *    if(button_release(GPIOB, GPIO_PIN_3, 1, 0)) { 
  88:Core/Src/button.c ****  *          //button was pressed and released
  89:Core/Src/button.c ****  *    }
  90:Core/Src/button.c ****  *  } while(1);                                    // Endless loop
  91:Core/Src/button.c ****  * }
  92:Core/Src/button.c ****  * @endcode
  93:Core/Src/button.c ****  * @param ui32Port GPIO where button is connected, using the macro from ST (GPIOX)
  94:Core/Src/button.c ****  * @param ui32Pin  Pin number on designated port from the gpio.h pin definitions (GPIO\_PIN\_X) 
  95:Core/Src/button.c ****  * @param active_state can be either 0 or 1, and it determines if the button is active upon logical
  96:Core/Src/button.c ****  * @return 255 if the pin was in the active state for given period and then released, 0 otherwise
  97:Core/Src/button.c ****  */
  98:Core/Src/button.c **** uint16_t button_release(GPIO_TypeDef* ui32Port, uint16_t ui16Pin, uint16_t active_state)
  99:Core/Src/button.c **** {
 159              		.loc 1 99 1
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 8
 162              		@ frame_needed = 1, uses_anonymous_args = 0
 163 0000 80B5     		push	{r7, lr}
 164              	.LCFI5:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 7, -8
 167              		.cfi_offset 14, -4
 168 0002 82B0     		sub	sp, sp, #8
 169              	.LCFI6:
 170              		.cfi_def_cfa_offset 16
 171 0004 00AF     		add	r7, sp, #0
 172              	.LCFI7:
 173              		.cfi_def_cfa_register 7
 174 0006 7860     		str	r0, [r7, #4]
 175 0008 0B46     		mov	r3, r1
 176 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 177 000c 1346     		mov	r3, r2	@ movhi
 178 000e 3B80     		strh	r3, [r7]	@ movhi
 100:Core/Src/button.c ****     if(button(ui32Port,ui16Pin,active_state))
 179              		.loc 1 100 8
 180 0010 3A88     		ldrh	r2, [r7]
 181 0012 7B88     		ldrh	r3, [r7, #2]
 182 0014 1946     		mov	r1, r3
 183 0016 7868     		ldr	r0, [r7, #4]
 184 0018 FFF7FEFF 		bl	button
 185 001c 0346     		mov	r3, r0
 186              		.loc 1 100 7
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 6


 187 001e 002B     		cmp	r3, #0
 188 0020 17D0     		beq	.L10
 101:Core/Src/button.c ****     {
 102:Core/Src/button.c ****         if(active_state)
 189              		.loc 1 102 11
 190 0022 3B88     		ldrh	r3, [r7]
 191 0024 002B     		cmp	r3, #0
 192 0026 09D0     		beq	.L16
 103:Core/Src/button.c ****         {
 104:Core/Src/button.c ****             while (HAL_GPIO_ReadPin(ui32Port, ui16Pin))
 193              		.loc 1 104 19
 194 0028 00BF     		nop
 195              	.L12:
 196              		.loc 1 104 20 discriminator 1
 197 002a 7B88     		ldrh	r3, [r7, #2]
 198 002c 1946     		mov	r1, r3
 199 002e 7868     		ldr	r0, [r7, #4]
 200 0030 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 201 0034 0346     		mov	r3, r0
 202 0036 002B     		cmp	r3, #0
 203 0038 F7D1     		bne	.L12
 204 003a 08E0     		b	.L13
 205              	.L16:
 105:Core/Src/button.c ****                 ;
 106:Core/Src/button.c ****         }
 107:Core/Src/button.c ****         else
 108:Core/Src/button.c ****         {
 109:Core/Src/button.c ****             while (!HAL_GPIO_ReadPin(ui32Port, ui16Pin))
 206              		.loc 1 109 19
 207 003c 00BF     		nop
 208              	.L14:
 209              		.loc 1 109 21 discriminator 1
 210 003e 7B88     		ldrh	r3, [r7, #2]
 211 0040 1946     		mov	r1, r3
 212 0042 7868     		ldr	r0, [r7, #4]
 213 0044 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 214 0048 0346     		mov	r3, r0
 215              		.loc 1 109 20 discriminator 1
 216 004a 002B     		cmp	r3, #0
 217 004c F7D0     		beq	.L14
 218              	.L13:
 110:Core/Src/button.c ****                 ;
 111:Core/Src/button.c ****         }
 112:Core/Src/button.c ****         return 0xFF;
 219              		.loc 1 112 16
 220 004e FF23     		movs	r3, #255
 221 0050 00E0     		b	.L15
 222              	.L10:
 113:Core/Src/button.c ****     }
 114:Core/Src/button.c ****     else
 115:Core/Src/button.c ****     {
 116:Core/Src/button.c ****         return 0;
 223              		.loc 1 116 16
 224 0052 0023     		movs	r3, #0
 225              	.L15:
 117:Core/Src/button.c ****     }    
 118:Core/Src/button.c **** }
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 7


 226              		.loc 1 118 1
 227 0054 1846     		mov	r0, r3
 228 0056 0837     		adds	r7, r7, #8
 229              	.LCFI8:
 230              		.cfi_def_cfa_offset 8
 231 0058 BD46     		mov	sp, r7
 232              	.LCFI9:
 233              		.cfi_def_cfa_register 13
 234              		@ sp needed
 235 005a 80BD     		pop	{r7, pc}
 236              		.cfi_endproc
 237              	.LFE131:
 239              		.text
 240              	.Letext0:
 241              		.file 2 "c:\\users\\isabe\\onedrive\\documentos\\faculdade\\microcontrolados\\tools\\tools\\arm-gn
 242              		.file 3 "c:\\users\\isabe\\onedrive\\documentos\\faculdade\\microcontrolados\\tools\\tools\\arm-gn
 243              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 244              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 245              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 button.c
C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s:20     .text.button:00000000 $t
C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s:26     .text.button:00000000 button
C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s:151    .text.button_release:00000000 $t
C:\Users\isabe\AppData\Local\Temp\ccSsW6Zb.s:157    .text.button_release:00000000 button_release

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
HAL_Delay
